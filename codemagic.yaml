workflows:
  ios-test:
    name: "iOS Build Test"
    max_build_duration: 30
    instance_type: mac_mini_m2

    environment:
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        AZURE_STORAGE_ACCOUNT: "tongiapks"
        AZURE_CONTAINER: "apk"
      groups:
        - azure

    triggering:
      events:
        - push

    scripts:
      - name: Clean
        script: |
          cd frontend
          flutter clean
          rm -rf ios/Pods ios/Podfile.lock
          rm -rf build/

      - name: Flutter pub get
        script: |
          cd frontend
          flutter pub get

      - name: Install CocoaPods dependencies
        script: |
          cd frontend/ios
          pod install

      - name: Build iOS (verbose mode)
        script: |
          cd frontend
          
          echo "üîç Informaci√≥n del entorno:"
          flutter doctor -v
          xcodebuild -version
          
          echo "üèóÔ∏è Construyendo iOS..."
          flutter build ios --release --no-codesign --verbose
          
          BUILD_STATUS=$?
          
          if [ $BUILD_STATUS -ne 0 ]; then
            echo "‚ùå Build fall√≥ con c√≥digo: $BUILD_STATUS"
            exit 1
          fi
          
          echo "‚úÖ Build completado exitosamente"
          echo ""
          echo "üì¶ Verificando archivos generados:"
          find build/ios -name "*.app" -o -name "*.xcarchive" | head -20

      - name: Create IPA
        script: |
          cd frontend
          
          # Buscar el .app m√°s reciente
          APP_PATH=$(find build/ios -name "Runner.app" -type d | head -n 1)
          
          if [ -z "$APP_PATH" ] || [ ! -d "$APP_PATH" ]; then
            echo "‚ùå Error: No se encontr√≥ Runner.app"
            echo "Contenido de build/ios/:"
            ls -R build/ios/ | head -100
            exit 1
          fi
          
          echo "‚úÖ Encontrado Runner.app en: $APP_PATH"
          
          # Crear el IPA
          IPA_DIR="build/ios/ipa"
          mkdir -p "$IPA_DIR/Payload"
          
          echo "üì¶ Copiando aplicaci√≥n..."
          cp -r "$APP_PATH" "$IPA_DIR/Payload/"
          
          echo "üóúÔ∏è Comprimiendo..."
          cd "$IPA_DIR"
          zip -r -q Runner.ipa Payload
          rm -rf Payload
          cd ../../..
          
          echo "‚úÖ IPA creado exitosamente"
          ls -lh build/ios/ipa/Runner.ipa

      - name: Install Azure CLI
        script: |
          echo "üì¶ Instalando Azure CLI..."
          brew update
          brew install azure-cli

      - name: Upload to Azure
        script: |
          cd frontend
          
          IPA_FILE="build/ios/ipa/Runner.ipa"
          
          if [ ! -f "$IPA_FILE" ]; then
            echo "‚ùå Error: $IPA_FILE no existe"
            exit 1
          fi
          
          FILE_SIZE=$(ls -lh "$IPA_FILE" | awk '{print $5}')
          echo "üì¶ Archivo a subir: $IPA_FILE ($FILE_SIZE)"
          
          echo "‚òÅÔ∏è Autenticando con Azure..."
          az login --service-principal \
            -u "$AZURE_CLIENT_ID" \
            -p "$AZURE_CLIENT_SECRET" \
            --tenant "$AZURE_TENANT_ID"

          TIMESTAMP=$(date +%Y%m%d%H%M)
          BLOB_NAME="tongi-ios-${TIMESTAMP}.ipa"

          echo "‚¨ÜÔ∏è Subiendo a Azure Blob Storage..."
          az storage blob upload \
            --account-name "$AZURE_STORAGE_ACCOUNT" \
            --container-name "$AZURE_CONTAINER" \
            --name "$BLOB_NAME" \
            --file "$IPA_FILE" \
            --auth-mode login \
            --overwrite

          echo ""
          echo "‚úÖ ¬°IPA subido correctamente!"
          echo "üì± Archivo: $BLOB_NAME"
          echo "üìç URL: https://${AZURE_STORAGE_ACCOUNT}.blob.core.windows.net/${AZURE_CONTAINER}/${BLOB_NAME}"
          echo ""
          echo "Para descargar desde Azure CLI:"
          echo "az storage blob download --account-name ${AZURE_STORAGE_ACCOUNT} --container-name ${AZURE_CONTAINER} --name ${BLOB_NAME} --file tongi-ios.ipa --auth-mode login"

    artifacts:
      - frontend/build/ios/ipa/*.ipa